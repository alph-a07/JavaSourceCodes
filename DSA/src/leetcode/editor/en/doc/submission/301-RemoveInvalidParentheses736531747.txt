class Solution {
    public List<String> removeInvalidParentheses(String s) {
        HashSet<String> ans = new HashSet<>();
        solution(s, minRemoval(s), ans);

        return ans.stream().toList();
    }

    private int minRemoval(String s) {
        Stack<Character> stack = new Stack<>();

        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '(')
                stack.push(s.charAt(i));

            else if (s.charAt(i) == ')') {
                if (stack.isEmpty())
                    stack.push(s.charAt(i));
                else if (stack.peek() == ')')
                    stack.push(s.charAt(i));
                else
                    stack.pop();
            }

        }
        return stack.size();
    }

    private void solution(String s, int minRemovalAllowed, HashSet<String> ans) {
        if (minRemovalAllowed == 0) {
            if (minRemoval(s) == 0) {
                if (!ans.contains(s))
                    ans.add(s);
            }
            return;
        }
        for (int i = 0; i < s.length() && (s.charAt(i) == '(' || s.charAt(i) == ')'); i++) {
            String left = s.substring(0, i);
            String right = s.substring(i + 1);

            solution(left + right, minRemovalAllowed - 1, ans);
        }
    }
}

//total_testcases:127
//total_correct:51
//input_formatted:"\"(a)())()\""
//expected_output:["(a())()","(a)()()"]
//code_output:[]
