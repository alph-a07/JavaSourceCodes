
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> list = new LinkedList<>();
        List<List<Integer>> ans = new ArrayList<>();

        if (root==null)
            return ans;
        
        list.add(root);
        int i = 0;
        while (!list.isEmpty()) {
            List<Integer> level = new ArrayList<>();
            for (int j = 0; j < Math.pow(2.0, i) && !list.isEmpty(); j++) {
                TreeNode tmp = list.remove();

                level.add(tmp.val);
                if (tmp.left != null) {
                    list.add(tmp.left);
                }
                if (tmp.right != null) {
                    list.add(tmp.right);
                }
            }
            ans.add(level);
            i++;
        }
        return ans;
    }
}

//total_testcases:34
//total_correct:8
//input_formatted:"[1,2,null,3,null,4,null,5]"
//expected_output:[[1],[2],[3],[4],[5]]
//code_output:[[1],[2,3],[4,5]]
